name: Android CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-upload:
    runs-on: [self-hosted, Linux, X64]

    steps:
    - uses: actions/checkout@v4

    - name: Grant execute permission for gradlew
      run: chmod +x Window/AndroidApp/car-api-hello-world/gradlew

    - name: Set environment variables
      run: |
        echo "ANDROID_HOME=/home/suresdv/Android/Sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/home/suresdv/Android/Sdk" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

    - name: Verify environment variables
      run: |
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "PATH: $PATH"

    - name: Build with Gradle
      run: cd Window/AndroidApp/car-api-hello-world && ./gradlew build

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: Window/AndroidApp/car-api-hello-world/app/build/outputs/apk/debug/app-debug.apk

    - name: Copy APK to local directory
      run: mkdir -p ~/apk && cp Window/AndroidApp/car-api-hello-world/app/build/outputs/apk/debug/app-debug.apk ~/apk/app-debug.apk

  emulator-and-test:
    runs-on: [self-hosted, Linux, X64]
    needs: build-and-upload

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: app-debug-apk
        path: ~/apk

    - name: Set environment variables
      run: |
        echo "ANDROID_HOME=/home/suresdv/Android/Sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/home/suresdv/Android/Sdk" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

    - name: Start Android Emulator
      run: |
        sudo $ANDROID_HOME/emulator/emulator -avd Automotive_1080p_landscape_API_33 &

    - name: Wait for emulator to start
      run: |
        adb wait-for-device
        boot_completed=""
        while [ -z "$boot_completed" ]; do
          boot_completed=$(adb shell getprop sys.boot_completed 2>&1 | tr -d '\r')
          echo "Waiting for emulator to boot..."
          sleep 5
        done
        echo "Emulator is ready."

    - name: Install APK on Emulator
      run: |
        adb install -r ~/apk/app-debug.apk || echo "APK install failed"

    - name: Verify installed packages
      run: |
        adb shell pm list packages | grep "com.example.carapihelloworld.debug"

    - name: Start MainActivity
      run: adb shell am start -n com.example.carapihelloworld.debug/com.jyjang.carSpeed.MainActivity

    - name: Create Snapshot
      run: |
        adb emu avd snapshot save default_boot

    - name: Stop Android Emulator
      run: |
        adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done
